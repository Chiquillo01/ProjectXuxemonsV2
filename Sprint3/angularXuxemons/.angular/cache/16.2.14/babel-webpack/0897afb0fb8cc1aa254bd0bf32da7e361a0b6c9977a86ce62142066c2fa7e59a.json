{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/users.service\";\nimport * as i2 from \"../../../services/xuxemons.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../services/token.service\";\nimport * as i5 from \"@angular/common\";\nfunction XuxedexComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function XuxedexComponent_div_4_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.crear());\n    });\n    i0.ɵɵtext(2, \" Crear Xuxemons \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction XuxedexComponent_div_6_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function XuxedexComponent_div_6_div_7_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const card_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.editar(card_r4));\n    });\n    i0.ɵɵtext(2, \" Editar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function XuxedexComponent_div_6_div_7_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const card_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.eliminar(card_r4.id));\n    });\n    i0.ɵɵtext(4, \" Eliminar \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction XuxedexComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"h3\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵelement(4, \"img\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h4\", 8);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, XuxedexComponent_div_6_div_7_Template, 5, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const card_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", card_r4.nombre, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"../assets/xuxemons/\" + card_r4.archivo, i0.ɵɵsanitizeUrl)(\"ngStyle\", ctx_r1.getImageStyle(\"grande\"));\n    i0.ɵɵattribute(\"alt\", card_r4.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", card_r4.tipo, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.userRole === 1);\n  }\n}\nexport class XuxedexComponent {\n  constructor(userService, xuxemonsService, router, tokenService) {\n    this.userService = userService;\n    this.xuxemonsService = xuxemonsService;\n    this.router = router;\n    this.tokenService = tokenService;\n    this.xuxemons = [];\n    this.userRole = this.tokenService ? this.tokenService.getRole() : null;\n  }\n  ngOnInit() {\n    this.updateXuxemons();\n  }\n  /**\n   * Nombre: getImageStyle\n   * Función: Modificar el tamaño de la imagen segun el tamaño del xuxemon\n   * @param tamano\n   * @returns\n   */\n  getImageStyle(tamano) {\n    let width;\n    const paqueno = 50;\n    const mediano = 100;\n    const grande = 150;\n    switch (tamano) {\n      case 'pequeno':\n        width = paqueno;\n        break;\n      case 'mediano':\n        width = mediano;\n        break;\n      case 'grande':\n        width = grande;\n        break;\n      default:\n        width = paqueno;\n        break;\n    }\n    return {\n      'width.px': width\n    };\n  }\n  /**\n   * Nombre: updateXuxemons\n   * Función: Obtener todos los Xuxemons de la BD\n   */\n  updateXuxemons() {\n    this.xuxemonsService.getAllXuxemons().subscribe({\n      next: value => {\n        this.xuxemons = value[0];\n      },\n      error: error => {\n        console.error('Error fetching Xuxemons:', error);\n      }\n    });\n  }\n  /**\n   * Nombre: crear\n   * Función: Crar que envia al usuario a la vista para crear Xuxemons\n   */\n  crear() {\n    this.router.navigate(['home/home/xuxemons/xuxedex/crear']);\n  }\n  /**\n   * Nombre: editar\n   * Función: Editar el Xuxemon seleccionado\n   */\n  editar(xuxe) {\n    const navigationExtras = {\n      queryParams: {\n        id: xuxe.id,\n        nombre: xuxe.nombre,\n        tipo: xuxe.tipo,\n        archivo: xuxe.archivo\n      }\n    };\n    this.router.navigate(['/home/home/xuxemons/xuxedex/editar'], navigationExtras);\n  }\n  /**\n   * Nombre: eliminar\n   * Función: Eliminar el xuxemon seleccionado\n   */\n  eliminar($id) {\n    this.xuxemonsService.XuxeDelete($id).subscribe({\n      next: () => {\n        this.router.navigate(['/home/home/xuxemons/xuxedex']);\n        alert('Xuxemon eliminado con exito.');\n        window.location.reload();\n      },\n      // Rechazada //\n      error: error => {\n        alert('Ha fallado algo, el Xuxemon no pudo ser eliminado');\n        throw new Error(error);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function XuxedexComponent_Factory(t) {\n    return new (t || XuxedexComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.XuxemonsService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.TokenService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: XuxedexComponent,\n    selectors: [[\"app-xuxedex\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[\"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\", \"rel\", \"stylesheet\", \"integrity\", \"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\", \"crossorigin\", \"anonymous\"], [1, \"container\"], [\"class\", \"adminButons\", 4, \"ngIf\"], [1, \"list-container\"], [\"class\", \"card-flex\", 4, \"ngFor\", \"ngForOf\"], [1, \"adminButons\"], [3, \"click\"], [1, \"card-flex\"], [1, \"card-title\"], [1, \"imgFormat\"], [3, \"src\", \"ngStyle\"], [4, \"ngIf\"], [1, \"editar-btn\", 3, \"click\"], [1, \"eliminar-btn\", 3, \"click\"]],\n    template: function XuxedexComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"head\");\n        i0.ɵɵelement(1, \"link\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"body\")(3, \"div\", 1);\n        i0.ɵɵtemplate(4, XuxedexComponent_div_4_Template, 3, 0, \"div\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtemplate(6, XuxedexComponent_div_6_Template, 8, 6, \"div\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.userRole === 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.xuxemons);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i5.NgStyle],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  background-color: rgb(65, 65, 65);\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100vh;\\n}\\n\\n.adminButons[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-flow: row;\\n  justify-content: right;\\n  gap: 20px;\\n  margin: 10px 0;\\n}\\n\\n.adminButons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: #10567e;\\n  color: #ffffff;\\n  border: 1px solid rgb(255, 133, 249);\\n  border-radius: 10px;\\n  width: 200px;\\n  height: 40px;\\n}\\n\\n.adminButons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #21799c;\\n}\\n\\n.list-container[_ngcontent-%COMP%] {\\n  background: linear-gradient(to top, #95baff, #cce6ff);\\n  border: 2px solid rgb(255, 133, 249);\\n  border-radius: 5px;\\n  display: flex;\\n  flex-flow: row wrap;\\n  justify-content: flex-start;\\n  align-items: center;\\n  align-content: center;\\n  gap: 40px;\\n  padding: 20px;\\n}\\n\\n.card-flex[_ngcontent-%COMP%] {\\n  background-color: rgb(29, 29, 29);\\n  color: white;\\n  border: 2px solid rgb(255, 133, 249);\\n  border-radius: 10px;\\n  margin-top: 5px;\\n}\\n\\n.card-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  width: 100%;\\n}\\n\\n.imgFormat[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  padding: 10px 2px 10px 2px;\\n}\\n\\n.editar-btn[_ngcontent-%COMP%], .eliminar-btn[_ngcontent-%COMP%] {\\n  background-color: pink;\\n  color: rgb(0, 0, 0);\\n  border: none;\\n  text-align: center;\\n  padding: 10px 20px;\\n  margin-top: 8px;\\n}\\n\\n.editar-btn[_ngcontent-%COMP%] {\\n  border-radius: 0 0 0 8px;\\n}\\n\\n.eliminar-btn[_ngcontent-%COMP%] {\\n  border-radius: 0 0 8px 0;\\n}\\n\\n.editar-btn[_ngcontent-%COMP%]:hover, .eliminar-btn[_ngcontent-%COMP%]:hover {\\n  background: linear-gradient(to top, #95baff, #cce6ff);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFpbi94dXhlbW9ucy94dXhlZGV4L3h1eGVkZXguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlDQUFpQztFQUNqQyxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixjQUFjO0VBQ2Qsc0JBQXNCO0VBQ3RCLFNBQVM7RUFDVCxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxvQ0FBb0M7RUFDcEMsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxxREFBcUQ7RUFDckQsb0NBQW9DO0VBQ3BDLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDJCQUEyQjtFQUMzQixtQkFBbUI7RUFDbkIscUJBQXFCO0VBQ3JCLFNBQVM7RUFDVCxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsWUFBWTtFQUNaLG9DQUFvQztFQUNwQyxtQkFBbUI7RUFDbkIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QiwwQkFBMEI7QUFDNUI7O0FBRUE7O0VBRUUsc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBOztFQUVFLHFEQUFxRDtBQUN2RCIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjUsIDY1LCA2NSk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xufVxuXG4uYWRtaW5CdXRvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdztcbiAganVzdGlmeS1jb250ZW50OiByaWdodDtcbiAgZ2FwOiAyMHB4O1xuICBtYXJnaW46IDEwcHggMDtcbn1cblxuLmFkbWluQnV0b25zIGJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMDU2N2U7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjU1LCAxMzMsIDI0OSk7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIHdpZHRoOiAyMDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xufVxuXG4uYWRtaW5CdXRvbnMgYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIxNzk5Yztcbn1cblxuLmxpc3QtY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzk1YmFmZiwgI2NjZTZmZik7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigyNTUsIDEzMywgMjQ5KTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgZ2FwOiA0MHB4O1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG4uY2FyZC1mbGV4IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI5LCAyOSwgMjkpO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigyNTUsIDEzMywgMjQ5KTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG4uY2FyZC10aXRsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmltZ0Zvcm1hdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAxMHB4IDJweCAxMHB4IDJweDtcbn1cblxuLmVkaXRhci1idG4sXG4uZWxpbWluYXItYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcGluaztcbiAgY29sb3I6IHJnYigwLCAwLCAwKTtcbiAgYm9yZGVyOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgbWFyZ2luLXRvcDogOHB4O1xufVxuXG4uZWRpdGFyLWJ0biB7XG4gIGJvcmRlci1yYWRpdXM6IDAgMCAwIDhweDtcbn1cblxuLmVsaW1pbmFyLWJ0biB7XG4gIGJvcmRlci1yYWRpdXM6IDAgMCA4cHggMDtcbn1cblxuLmVkaXRhci1idG46aG92ZXIsXG4uZWxpbWluYXItYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzk1YmFmZiwgI2NjZTZmZik7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","XuxedexComponent_div_4_Template_button_click_1_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","crear","ɵɵtext","ɵɵelementEnd","XuxedexComponent_div_6_div_7_Template_button_click_1_listener","_r8","card_r4","$implicit","ctx_r6","editar","XuxedexComponent_div_6_div_7_Template_button_click_3_listener","ctx_r9","eliminar","id","ɵɵelement","ɵɵtemplate","XuxedexComponent_div_6_div_7_Template","ɵɵadvance","ɵɵtextInterpolate1","nombre","ɵɵproperty","archivo","ɵɵsanitizeUrl","ctx_r1","getImageStyle","ɵɵattribute","tipo","userRole","XuxedexComponent","constructor","userService","xuxemonsService","router","tokenService","xuxemons","getRole","ngOnInit","updateXuxemons","tamano","width","paqueno","mediano","grande","getAllXuxemons","subscribe","next","value","error","console","navigate","xuxe","navigationExtras","queryParams","$id","XuxeDelete","alert","window","location","reload","Error","_","ɵɵdirectiveInject","i1","UsersService","i2","XuxemonsService","i3","Router","i4","TokenService","_2","selectors","decls","vars","consts","template","XuxedexComponent_Template","rf","ctx","XuxedexComponent_div_4_Template","XuxedexComponent_div_6_Template"],"sources":["C:\\Users\\Edgar\\Documents\\GitHub\\ProjectXuxemonsV2\\Sprint3\\angularXuxemons\\src\\app\\main\\xuxemons\\xuxedex\\xuxedex.component.ts","C:\\Users\\Edgar\\Documents\\GitHub\\ProjectXuxemonsV2\\Sprint3\\angularXuxemons\\src\\app\\main\\xuxemons\\xuxedex\\xuxedex.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\n// Imports extras //\nimport { Xuxemons } from '../../../models/xuxedex/xuxedex.model';\nimport { UsersService } from '../../../services/users.service';\nimport { XuxemonsService } from '../../../services/xuxemons.service';\nimport { TokenService } from '../../../services/token.service';\n\n@Component({\n  selector: 'app-xuxedex',\n  templateUrl: './xuxedex.component.html',\n  styleUrls: ['./xuxedex.component.css'],\n})\nexport class XuxedexComponent implements OnInit {\n  xuxemons: Xuxemons[] = [];\n  userRole: Number | null;\n\n  constructor(\n    public userService: UsersService,\n    public xuxemonsService: XuxemonsService,\n    private router: Router,\n    public tokenService: TokenService\n  ) {\n    this.userRole = this.tokenService ? this.tokenService.getRole() : null;\n  }\n\n  ngOnInit(): void {\n    this.updateXuxemons();\n  }\n\n  /**\n   * Nombre: getImageStyle\n   * Función: Modificar el tamaño de la imagen segun el tamaño del xuxemon\n   * @param tamano \n   * @returns \n   */\n  getImageStyle(tamano: string): any {\n    let width: number;\n    const paqueno = 50;\n    const mediano = 100;\n    const grande = 150;\n\n    switch (tamano) {\n      case 'pequeno': width = paqueno; break;\n      case 'mediano': width = mediano; break;\n      case 'grande': width = grande; break;\n      default: width = paqueno; break;\n    }\n    return {\n      'width.px': width,\n    };\n  }\n\n  /**\n   * Nombre: updateXuxemons\n   * Función: Obtener todos los Xuxemons de la BD\n   */\n  updateXuxemons() {\n    this.xuxemonsService.getAllXuxemons().subscribe({\n      next: (value: any) => {\n        this.xuxemons = value[0];\n      },\n      error: (error) => {\n        console.error('Error fetching Xuxemons:', error);\n      },\n    });\n  }\n\n  /**\n   * Nombre: crear\n   * Función: Crar que envia al usuario a la vista para crear Xuxemons\n   */\n  crear() {\n    this.router.navigate(['home/home/xuxemons/xuxedex/crear']);\n  }\n\n  /**\n   * Nombre: editar\n   * Función: Editar el Xuxemon seleccionado\n   */\n  editar(xuxe: any) {\n    const navigationExtras: NavigationExtras = {\n      queryParams: {\n        id: xuxe.id,\n        nombre: xuxe.nombre,\n        tipo: xuxe.tipo,\n        archivo: xuxe.archivo,\n      },\n    };\n    this.router.navigate(\n      ['/home/home/xuxemons/xuxedex/editar'],\n      navigationExtras\n    );\n  }\n\n  /**\n   * Nombre: eliminar\n   * Función: Eliminar el xuxemon seleccionado\n   */\n  eliminar($id: any) {\n    this.xuxemonsService.XuxeDelete($id).subscribe({\n      next: () => {\n        this.router.navigate(['/home/home/xuxemons/xuxedex']);\n        alert('Xuxemon eliminado con exito.');\n        window.location.reload();\n      },\n      // Rechazada //\n      error: (error) => {\n        alert('Ha fallado algo, el Xuxemon no pudo ser eliminado');\n        throw new Error(error);\n      },\n    });\n  }\n}\n","<head>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n</head>\n\n<body>\n  <div class=\"container\">\n    <!-- Solo para usuario administrador -->\n    <div class=\"adminButons\" *ngIf=\"userRole === 1\">\n      <button (click)=\"crear()\">\n        Crear Xuxemons\n      </button>\n    </div>\n    <!-- //////////////////////////////////////// -->\n\n    <div class=\"list-container\">\n      <div class=\"card-flex\" *ngFor=\"let card of xuxemons\">\n        <h3 class=\"card-title\">\n          {{card.nombre}}\n        </h3>\n\n        <div class=\"imgFormat\">\n          <img [src]=\"'../assets/xuxemons/' + card.archivo\" [attr.alt]=\"card.nombre\"\n            [ngStyle]=\"getImageStyle('grande')\">\n        </div>\n\n        <h4 class=\"card-title\">\n          {{card.tipo}}\n        </h4>\n\n        <!-- Solo para usaruio administrador -->\n        <div *ngIf=\"userRole === 1\">\n          <button class=\"editar-btn\" (click)=\"editar(card)\">\n            Editar\n          </button>\n\n          <button class=\"eliminar-btn\" (click)=\"eliminar(card.id)\">\n            Eliminar\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}