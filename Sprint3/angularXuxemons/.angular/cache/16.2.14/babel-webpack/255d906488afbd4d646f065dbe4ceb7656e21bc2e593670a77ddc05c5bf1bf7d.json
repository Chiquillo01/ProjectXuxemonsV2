{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/token.service\";\nimport * as i2 from \"../../../services/chuches.service\";\nimport * as i3 from \"@angular/common\";\nfunction ChuchesComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ChuchesComponent_div_4_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.debug());\n    });\n    i0.ɵɵtext(2, \" Debug \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChuchesComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"h2\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const chuche_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", chuche_r4.stack, \" \");\n  }\n}\nfunction ChuchesComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, ChuchesComponent_div_6_div_1_Template, 3, 1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"h2\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const chuche_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", chuche_r4.stack > 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", chuche_r4.nombre, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", chuche_r4.nombre);\n    i0.ɵɵproperty(\"src\", \"../../../../assets/home/chuches/\" + chuche_r4.archivo, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class ChuchesComponent {\n  constructor(tokenService, chuchesService) {\n    this.tokenService = tokenService;\n    this.chuchesService = chuchesService;\n    this.chucheUser = [];\n    this.horario = [];\n  }\n  ngOnInit() {\n    // this.activarHorario();\n    this.getHorario();\n    this.getChuches();\n    this.userRol = this.tokenService.getRole();\n  }\n  /**\n   * Nombre: getChuches\n   * Función: obtiene todas las chuches que son del usuario que esta en sessión\n   */\n  getChuches() {\n    const userToken = this.tokenService.getToken();\n    console.log('userToken getChuches: ' + userToken);\n    if (userToken !== null) {\n      this.chuchesService.getAllChuchesUser(userToken).subscribe({\n        next: chuchesUser => {\n          this.chucheUser = chuchesUser[0];\n        },\n        error: error => {\n          console.error('Error fetching Xuxemons:', error);\n        }\n      });\n    } else {\n      console.error('User ID is null');\n    }\n  }\n  /**\n   * Nombre: getHorario\n   * Función: obtiene la info del horario del usuario\n   */\n  getHorario() {\n    const userToken = this.tokenService.getToken();\n    console.log('userToken getHorario: ' + userToken);\n    if (userToken !== null) {\n      this.chuchesService.getHorario(userToken).subscribe({\n        next: Horario => {\n          this.horario = Horario[0];\n        },\n        error: error => {\n          console.error('Error fetching Xuxemons:', error);\n        }\n      });\n    } else {\n      console.error('User ID is null');\n    }\n  }\n  /**\n   * Nombre: getHorario\n   * Función: obtiene todas las chuches que son del usuario que esta en sessión\n   */\n  activarHorario() {\n    // const userToken = this.tokenService.getRole();\n    // console.log('userToken: ' + userToken);\n    // if (userToken !== null) {\n    //   this.chuchesService.activarHorario(userToken).subscribe({\n    //     next: (Horario: any) => {\n    //       console.log(\"debug activado ?\");\n    //     },\n    //     error: (error) => {\n    //       console.error('Error activando el debug:', error);\n    //     },\n    //   });\n    // } else {\n    //   console.error('User ID is null');\n    // }\n  }\n  /**\n   * Nombre: debug\n   * Función: crea aleatoriamente una chuche pasandole el id del usuario de la sesión habierta.\n   * Despues actualizara la lista de chuches del Usuario\n   */\n  debug() {\n    const userToken = this.tokenService.getToken();\n    console.log('userToken debug: ' + userToken);\n    // crea o actualiza el horario del usuario\n    this.chuchesService.horario(userToken).subscribe({\n      next: () => {\n        console.log('Horario creado');\n      },\n      error: error => {\n        alert('Horario fallido.');\n        console.log(error);\n      }\n    });\n    if (this.horario[0].debug || this.userRol == 1) {\n      // crea o añade al stack las chuches\n      this.chuchesService.createChuchesAleatorios(userToken).subscribe({\n        next: () => {\n          console.log('Chuche añadida');\n          this.getChuches();\n          this.getHorario();\n        },\n        error: error => {\n          alert('Chuche fallida.');\n          console.log(error);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ChuchesComponent_Factory(t) {\n    return new (t || ChuchesComponent)(i0.ɵɵdirectiveInject(i1.TokenService), i0.ɵɵdirectiveInject(i2.ChuchesService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChuchesComponent,\n    selectors: [[\"app-chuches\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[\"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\", \"rel\", \"stylesheet\", \"integrity\", \"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\", \"crossorigin\", \"anonymous\"], [1, \"container\"], [\"class\", \"adminButons\", 4, \"ngIf\"], [1, \"list-container\"], [\"class\", \"card-flex\", 4, \"ngFor\", \"ngForOf\"], [1, \"adminButons\"], [3, \"click\"], [1, \"card-flex\"], [\"class\", \"stackZone\", 4, \"ngIf\"], [1, \"card-title\"], [1, \"imgFormat\"], [3, \"src\", \"alt\"], [1, \"stackZone\"]],\n    template: function ChuchesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"head\");\n        i0.ɵɵelement(1, \"link\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"body\")(3, \"div\", 1);\n        i0.ɵɵtemplate(4, ChuchesComponent_div_4_Template, 3, 0, \"div\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtemplate(6, ChuchesComponent_div_6_Template, 6, 4, \"div\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (ctx.horario[0] == null ? null : ctx.horario[0].debug) == undefined || (ctx.horario[0] == null ? null : ctx.horario[0].debug) || ctx.userRol == 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chucheUser);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  background-color: rgb(65, 65, 65);\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100vh;\\n}\\n\\n.adminButons[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-flow: row;\\n  justify-content: right;\\n  gap: 20px;\\n  margin: 10px 0;\\n}\\n\\n.adminButons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: #10567e;\\n  color: #ffffff;\\n  border: 1px solid rgb(255, 133, 249);\\n  border-radius: 10px;\\n  width: 200px;\\n  height: 40px;\\n}\\n\\n.adminButons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #21799c;\\n}\\n\\n.list-container[_ngcontent-%COMP%] {\\n  background: linear-gradient(to top, #95baff, #cce6ff);\\n  border: 2px solid rgb(255, 133, 249);\\n  border-radius: 5px;\\n  display: flex;\\n  flex-flow: row wrap;\\n  justify-content: flex-start;\\n  align-items: center;\\n  align-content: center;\\n  gap: 30px;\\n  margin: 1em 0;\\n  padding: 20px;\\n}\\n\\n.card-flex[_ngcontent-%COMP%] {\\n  background-color: rgb(29, 29, 29);\\n  color: white;\\n  border: 2px solid rgb(255, 133, 249);\\n  border-radius: 10px;\\n  margin-top: 5px;\\n  min-width: 150px;\\n}\\n\\n.card-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  width: 100%;\\n  padding: 4px 8px;\\n}\\n\\nimg[_ngcontent-%COMP%]{\\n  margin: 10px 0 10px 20px;\\n  width: 100px;\\n  height: 100px;\\n}\\n\\n.stackZone[_ngcontent-%COMP%]{\\n  background-color: rgb(67, 67, 67);\\n  color: white;\\n  width: 50px;\\n  border-radius: 100px;\\n  border: 2px solid red;\\n  margin: -20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFpbi9pbnZlbnRhcmlvL2NodWNoZXMvY2h1Y2hlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUNBQWlDO0VBQ2pDLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLGNBQWM7RUFDZCxzQkFBc0I7RUFDdEIsU0FBUztFQUNULGNBQWM7QUFDaEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsY0FBYztFQUNkLG9DQUFvQztFQUNwQyxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHFEQUFxRDtFQUNyRCxvQ0FBb0M7RUFDcEMsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsMkJBQTJCO0VBQzNCLG1CQUFtQjtFQUNuQixxQkFBcUI7RUFDckIsU0FBUztFQUNULGFBQWE7RUFDYixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsWUFBWTtFQUNaLG9DQUFvQztFQUNwQyxtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHdCQUF3QjtFQUN4QixZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0UsaUNBQWlDO0VBQ2pDLFlBQVk7RUFDWixXQUFXO0VBQ1gsb0JBQW9CO0VBQ3BCLHFCQUFxQjtFQUNyQixhQUFhO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjUsIDY1LCA2NSk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG4uYWRtaW5CdXRvbnMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1mbG93OiByb3c7XHJcbiAganVzdGlmeS1jb250ZW50OiByaWdodDtcclxuICBnYXA6IDIwcHg7XHJcbiAgbWFyZ2luOiAxMHB4IDA7XHJcbn1cclxuXHJcbi5hZG1pbkJ1dG9ucyBidXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMxMDU2N2U7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDI1NSwgMTMzLCAyNDkpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxufVxyXG5cclxuLmFkbWluQnV0b25zIGJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIxNzk5YztcclxufVxyXG5cclxuLmxpc3QtY29udGFpbmVyIHtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjOTViYWZmLCAjY2NlNmZmKTtcclxuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMjU1LCAxMzMsIDI0OSk7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgZ2FwOiAzMHB4O1xyXG4gIG1hcmdpbjogMWVtIDA7XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuLmNhcmQtZmxleCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI5LCAyOSwgMjkpO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMjU1LCAxMzMsIDI0OSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgbWluLXdpZHRoOiAxNTBweDtcclxufVxyXG5cclxuLmNhcmQtdGl0bGUge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogNHB4IDhweDtcclxufVxyXG5cclxuaW1ne1xyXG4gIG1hcmdpbjogMTBweCAwIDEwcHggMjBweDtcclxuICB3aWR0aDogMTAwcHg7XHJcbiAgaGVpZ2h0OiAxMDBweDtcclxufVxyXG5cclxuLnN0YWNrWm9uZXtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjcsIDY3LCA2Nyk7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHdpZHRoOiA1MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkIHJlZDtcclxuICBtYXJnaW46IC0yMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","ChuchesComponent_div_4_Template_button_click_1_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","debug","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","chuche_r4","stack","ɵɵtemplate","ChuchesComponent_div_6_div_1_Template","ɵɵelement","ɵɵproperty","nombre","ɵɵpropertyInterpolate","archivo","ɵɵsanitizeUrl","ChuchesComponent","constructor","tokenService","chuchesService","chucheUser","horario","ngOnInit","getHorario","getChuches","userRol","getRole","userToken","getToken","console","log","getAllChuchesUser","subscribe","next","chuchesUser","error","Horario","activarHorario","alert","createChuchesAleatorios","_","ɵɵdirectiveInject","i1","TokenService","i2","ChuchesService","_2","selectors","decls","vars","consts","template","ChuchesComponent_Template","rf","ctx","ChuchesComponent_div_4_Template","ChuchesComponent_div_6_Template","undefined"],"sources":["C:\\Users\\Edgar\\Documents\\GitHub\\ProjectXuxemonsV2\\Sprint3\\angularXuxemons\\src\\app\\main\\inventario\\chuches\\chuches.component.ts","C:\\Users\\Edgar\\Documents\\GitHub\\ProjectXuxemonsV2\\Sprint3\\angularXuxemons\\src\\app\\main\\inventario\\chuches\\chuches.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n// Imports extras //\r\nimport { TokenService } from '../../../services/token.service';\r\nimport { ChuchesService } from '../../../services/chuches.service';\r\nimport { ChuchesUser } from '../../../models/chuches/chuchesUser.model';\r\nimport { Horario } from '../../../models/horario/horario.model';\r\n\r\n@Component({\r\n  selector: 'app-chuches',\r\n  templateUrl: './chuches.component.html',\r\n  styleUrls: ['./chuches.component.css'],\r\n})\r\nexport class ChuchesComponent implements OnInit {\r\n  chucheUser: ChuchesUser[] = [];\r\n  horario: Horario[] = [];\r\n  userRol!: number;\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private chuchesService: ChuchesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.activarHorario();\r\n    this.getHorario();\r\n    this.getChuches();\r\n    this.userRol = this.tokenService.getRole()!;\r\n  }\r\n\r\n  /**\r\n   * Nombre: getChuches\r\n   * Función: obtiene todas las chuches que son del usuario que esta en sessión\r\n   */\r\n  getChuches() {\r\n    const userToken = this.tokenService.getToken();\r\n    console.log('userToken getChuches: ' + userToken);\r\n\r\n    if (userToken !== null) {\r\n      this.chuchesService.getAllChuchesUser(userToken).subscribe({\r\n        next: (chuchesUser: any) => {\r\n          this.chucheUser = chuchesUser[0];\r\n        },\r\n        error: (error) => {\r\n          console.error('Error fetching Xuxemons:', error);\r\n        },\r\n      });\r\n    } else {\r\n      console.error('User ID is null');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Nombre: getHorario\r\n   * Función: obtiene la info del horario del usuario\r\n   */\r\n  getHorario() {\r\n    const userToken = this.tokenService.getToken();\r\n    console.log('userToken getHorario: ' + userToken);\r\n\r\n    if (userToken !== null) {\r\n      this.chuchesService.getHorario(userToken).subscribe({\r\n        next: (Horario: any) => {\r\n          this.horario = Horario[0];\r\n        },\r\n        error: (error) => {\r\n          console.error('Error fetching Xuxemons:', error);\r\n        },\r\n      });\r\n    } else {\r\n      console.error('User ID is null');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Nombre: getHorario\r\n   * Función: obtiene todas las chuches que son del usuario que esta en sessión\r\n   */\r\n  activarHorario() {\r\n    // const userToken = this.tokenService.getRole();\r\n    // console.log('userToken: ' + userToken);\r\n    // if (userToken !== null) {\r\n    //   this.chuchesService.activarHorario(userToken).subscribe({\r\n    //     next: (Horario: any) => {\r\n    //       console.log(\"debug activado ?\");\r\n    //     },\r\n    //     error: (error) => {\r\n    //       console.error('Error activando el debug:', error);\r\n    //     },\r\n    //   });\r\n    // } else {\r\n    //   console.error('User ID is null');\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * Nombre: debug\r\n   * Función: crea aleatoriamente una chuche pasandole el id del usuario de la sesión habierta.\r\n   * Despues actualizara la lista de chuches del Usuario\r\n   */\r\n  debug(): void {\r\n    const userToken = this.tokenService.getToken();\r\n\r\n    console.log('userToken debug: ' + userToken);\r\n\r\n    // crea o actualiza el horario del usuario\r\n    this.chuchesService.horario(userToken!).subscribe({\r\n      next: () => {\r\n        console.log('Horario creado');\r\n      },\r\n      error: (error) => {\r\n        alert('Horario fallido.');\r\n        console.log(error);\r\n      },\r\n    });\r\n\r\n    if (this.horario[0].debug || this.userRol == 1) {\r\n      // crea o añade al stack las chuches\r\n      this.chuchesService.createChuchesAleatorios(userToken!).subscribe({\r\n        next: () => {\r\n          console.log('Chuche añadida');\r\n          this.getChuches();\r\n          this.getHorario();\r\n        },\r\n        error: (error) => {\r\n          alert('Chuche fallida.');\r\n          console.log(error);\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","<head>\r\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n    integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n</head>\r\n\r\n<body>\r\n  <div class=\"container\">\r\n    <!-- Solo para usuario administrador -->\r\n    <div class=\"adminButons\" *ngIf=\"horario[0]?.debug == undefined || horario[0]?.debug || userRol == 1\">\r\n      <button (click)=\"debug()\">\r\n        Debug\r\n      </button>\r\n      <!-- <h3 *ngIf=\"horario[0].debug\">Horario: {{horario[0].debug}}</h3> -->\r\n    </div>\r\n    <!-- //////////////////////////////////////// -->\r\n\r\n    <div class=\"list-container\">\r\n      <div class=\"card-flex\" *ngFor=\"let chuche of chucheUser\">\r\n        <div class=\"stackZone\" *ngIf=\"chuche.stack > 1\">\r\n          <h2 class=\"card-title\">\r\n            {{chuche.stack}}\r\n          </h2>\r\n        </div>\r\n        <h2 class=\"card-title\">\r\n          {{chuche.nombre}}\r\n        </h2>\r\n        <!-- <h1  *ngIf=\"chuche.stack > 1\" class=\"stack\">\r\n            {{chuche.stack}}\r\n          </h1> -->\r\n        <div class=\"imgFormat\">\r\n          <img [src]=\"'../../../../assets/home/chuches/' + chuche.archivo\" alt=\"{{ chuche.nombre }}\">\r\n        </div>\r\n\r\n        <!-- <h4 class=\"card-title\">\r\n          {{chuche.dinero}}<p>coins</p>\r\n        </h4>\r\n        <h4 class=\"card-title\">\r\n          {{chuche.modificador}}<p>xp</p>\r\n        </h4> -->\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}